[debug] [2019-08-12T16:33:35.408Z] ----------------------------------------------------------------------
[debug] [2019-08-12T16:33:35.410Z] Command:       /usr/local/Cellar/node/12.6.0/bin/node /usr/local/bin/firebase init
[debug] [2019-08-12T16:33:35.411Z] CLI Version:   7.2.2
[debug] [2019-08-12T16:33:35.411Z] Platform:      darwin
[debug] [2019-08-12T16:33:35.411Z] Node Version:  v12.6.0
[debug] [2019-08-12T16:33:35.412Z] Time:          Mon Aug 12 2019 12:33:35 GMT-0400 (Eastern Daylight Time)
[debug] [2019-08-12T16:33:35.412Z] ----------------------------------------------------------------------
[debug] 
[debug] [2019-08-12T16:33:35.418Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-08-12T16:33:35.419Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /Users/dylancraig/Documents/TDMK/middleburg-charter-app

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2019-08-12T16:33:44.036Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects?page_size=100  
 
[debug] [2019-08-12T16:33:44.309Z] <<< HTTP RESPONSE 200
[info] i  Using project middleburg-charter-apps (Middleburg Charter Apps)
[info] 
=== Firestore Setup
[debug] [2019-08-12T16:33:47.912Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-08-12T16:33:47.913Z] > authorizing via signed-in user
[debug] [2019-08-12T16:33:47.913Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/middleburg-charter-apps  
 
[debug] [2019-08-12T16:33:48.104Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2019-08-12T16:33:51.562Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/middleburg-charter-apps/releases?pageSize=10&pageToken=  
 
[debug] [2019-08-12T16:33:51.764Z] <<< HTTP RESPONSE 200
[debug] [2019-08-12T16:33:51.765Z] Found ruleset: projects/middleburg-charter-apps/rulesets/220ad800-7693-4c2f-bf7e-4df47168139f
[debug] [2019-08-12T16:33:51.765Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/middleburg-charter-apps/rulesets/220ad800-7693-4c2f-bf7e-4df47168139f  
 
[debug] [2019-08-12T16:33:51.938Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2019-08-12T16:33:53.810Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1beta2/projects/middleburg-charter-apps/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2019-08-12T16:33:53.810Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1beta2/projects/middleburg-charter-apps/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2019-08-12T16:33:54.042Z] <<< HTTP RESPONSE 200
[debug] [2019-08-12T16:33:54.629Z] <<< HTTP RESPONSE 200
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with a Node.js
[info] package pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2019-08-12T16:33:54.631Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-08-12T16:33:54.631Z] > authorizing via signed-in user
[debug] [2019-08-12T16:33:54.631Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/middleburg-charter-apps  
 
[debug] [2019-08-12T16:33:54.816Z] <<< HTTP RESPONSE 200
[debug] [2019-08-12T16:33:54.818Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/middleburg-charter-apps/services/cloudfunctions.googleapis.com:enable  
 
[debug] [2019-08-12T16:33:54.819Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/middleburg-charter-apps/services/runtimeconfig.googleapis.com:enable  
 
[debug] [2019-08-12T16:33:55.125Z] <<< HTTP RESPONSE 200
[debug] [2019-08-12T16:33:55.180Z] <<< HTTP RESPONSE 200
[info] ✔  Wrote functions/package.json
[info] ✔  Wrote functions/.eslintrc.json
[info] ✔  Wrote functions/index.js
[info] ✔  Wrote functions/.gitignore
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
